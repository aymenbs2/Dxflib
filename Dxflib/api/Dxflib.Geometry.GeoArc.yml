### YamlMime:ManagedReference
items:
- uid: Dxflib.Geometry.GeoArc
  commentId: T:Dxflib.Geometry.GeoArc
  id: GeoArc
  parent: Dxflib.Geometry
  children:
  - Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex)
  - Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,System.Double)
  - Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,System.Double,System.Double,System.Double)
  - Dxflib.Geometry.GeoArc.Angle
  - Dxflib.Geometry.GeoArc.Area
  - Dxflib.Geometry.GeoArc.BulgeValue
  - Dxflib.Geometry.GeoArc.CalcCenterVertex(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,System.Double)
  - Dxflib.Geometry.GeoArc.CalcLength
  - Dxflib.Geometry.GeoArc.CalcPointOnArc(Dxflib.Geometry.Vertex,System.Double,System.Double)
  - Dxflib.Geometry.GeoArc.CenterVertex
  - Dxflib.Geometry.GeoArc.EndAngle
  - Dxflib.Geometry.GeoArc.Length
  - Dxflib.Geometry.GeoArc.Radius
  - Dxflib.Geometry.GeoArc.StartAngle
  - Dxflib.Geometry.GeoArc.ToVector
  - Dxflib.Geometry.GeoArc.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  - Dxflib.Geometry.GeoArc.Vertex0
  - Dxflib.Geometry.GeoArc.Vertex1
  langs:
  - csharp
  - vb
  name: GeoArc
  nameWithType: GeoArc
  fullName: Dxflib.Geometry.GeoArc
  type: Class
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: GeoArc
    path: Geometry/GeoArc.cs
    startLine: 39
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe GeoArc Class, a class that defines an arc. Note that\nan arc can be defined in more than one way. If this GeoArc is a\npart of an LwPolyLine then is defined using a bulge. If it is\nalone then it is defined using a radius.\n\nNote that there are 3 distinct ways to construct an Arc\n1. The First way is the Vertex, Vertex and Bulge (VVB) Method\nThis Method uses two vertices that are at endpoints of the arc and\na numerical values called the bulge.\n\n2. The Second Method is the Center Point, Starting Angle, Ending Angle and Radius\n(CAAR) Method. The CAAR method uses a point that will be the center point of the arc\nthe starting angle of the arc and the ending angle of the arc as well as the radius\nof the arc. This method is mostly used if a user would like to create an arc. Also,\nthis method is used in the AutoCAD ARC Entity.\n\n3. The Third Method is the Vertex, Vertex, Vertex (V3) Method. The V3 method uses\n3 vertices that the arc must pass though. The first and second vertex are the starting\nand ending vertices. The middle vertex can be any vertex that is on the arc. During\nthe moving of one vertex the center arc length is usually chosen as the middle vertex.\n"
  example: []
  syntax:
    content: 'public class GeoArc : GeometricEntityBase'
    content.vb: >-
      Public Class GeoArc
          Inherits GeometricEntityBase
  inheritance:
  - System.Object
  - Dxflib.Geometry.GeometricEntityBase
  inheritedMembers:
  - Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  - Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  - Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,System.Double)
  commentId: M:Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,System.Double)
  id: '#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,System.Double)'
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: GeoArc(Vertex, Vertex, Double)
  nameWithType: GeoArc.GeoArc(Vertex, Vertex, Double)
  fullName: Dxflib.Geometry.GeoArc.GeoArc(Dxflib.Geometry.Vertex, Dxflib.Geometry.Vertex, System.Double)
  type: Constructor
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: Geometry/GeoArc.cs
    startLine: 57
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nGeoArc Constructor: Vertex, Vertex and Bulge (VVB)\n"
  example: []
  syntax:
    content: public GeoArc(Vertex vertex0, Vertex vertex1, double bulge)
    parameters:
    - id: vertex0
      type: Dxflib.Geometry.Vertex
      description: First Vertex
    - id: vertex1
      type: Dxflib.Geometry.Vertex
      description: Second Vertex
    - id: bulge
      type: System.Double
      description: The Bulge
    content.vb: Public Sub New(vertex0 As Vertex, vertex1 As Vertex, bulge As Double)
  overload: Dxflib.Geometry.GeoArc.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,System.Double,System.Double,System.Double)
  commentId: M:Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,System.Double,System.Double,System.Double)
  id: '#ctor(Dxflib.Geometry.Vertex,System.Double,System.Double,System.Double)'
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: GeoArc(Vertex, Double, Double, Double)
  nameWithType: GeoArc.GeoArc(Vertex, Double, Double, Double)
  fullName: Dxflib.Geometry.GeoArc.GeoArc(Dxflib.Geometry.Vertex, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: Geometry/GeoArc.cs
    startLine: 80
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nGeoArc Constructor: Center Vertex, Starting Angle, Ending Angle and Radius (CAAR)\n"
  example: []
  syntax:
    content: public GeoArc(Vertex centerVertex, double startAngle, double endAngle, double radius)
    parameters:
    - id: centerVertex
      type: Dxflib.Geometry.Vertex
      description: The Center Vertex of the GeoArc
    - id: startAngle
      type: System.Double
      description: The Starting Angle (Radians)
    - id: endAngle
      type: System.Double
      description: The Ending Angle (Radians)
    - id: radius
      type: System.Double
      description: The Radius of the Arc
    content.vb: Public Sub New(centerVertex As Vertex, startAngle As Double, endAngle As Double, radius As Double)
  overload: Dxflib.Geometry.GeoArc.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex)
  commentId: M:Dxflib.Geometry.GeoArc.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex)
  id: '#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex)'
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: GeoArc(Vertex, Vertex, Vertex)
  nameWithType: GeoArc.GeoArc(Vertex, Vertex, Vertex)
  fullName: Dxflib.Geometry.GeoArc.GeoArc(Dxflib.Geometry.Vertex, Dxflib.Geometry.Vertex, Dxflib.Geometry.Vertex)
  type: Constructor
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: Geometry/GeoArc.cs
    startLine: 104
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nGeo Arc Constructor: Vertex, Vertex, Vertex (V3)\nThe V3 Constructor takes three vertices that the arc must pass through and\ncalculates all of the other properties of the arc\n"
  example: []
  syntax:
    content: public GeoArc(Vertex vertex0, Vertex middleVertex, Vertex vertex1)
    parameters:
    - id: vertex0
      type: Dxflib.Geometry.Vertex
      description: The Starting Vertex
    - id: middleVertex
      type: Dxflib.Geometry.Vertex
      description: The Middle Vertex
    - id: vertex1
      type: Dxflib.Geometry.Vertex
      description: The Ending Vertex
    content.vb: Public Sub New(vertex0 As Vertex, middleVertex As Vertex, vertex1 As Vertex)
  overload: Dxflib.Geometry.GeoArc.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.Length
  commentId: P:Dxflib.Geometry.GeoArc.Length
  id: Length
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: GeoArc.Length
  fullName: Dxflib.Geometry.GeoArc.Length
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Length
    path: Geometry/GeoArc.cs
    startLine: 112
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Length of the GeoArc\n"
  example: []
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: Dxflib.Geometry.GeoArc.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.Geometry.GeoArc.Angle
  commentId: P:Dxflib.Geometry.GeoArc.Angle
  id: Angle
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: GeoArc.Angle
  fullName: Dxflib.Geometry.GeoArc.Angle
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Angle
    path: Geometry/GeoArc.cs
    startLine: 117
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Total Angle of the Arc\n"
  example: []
  syntax:
    content: public double Angle { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Angle As Double
  overload: Dxflib.Geometry.GeoArc.Angle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.Radius
  commentId: P:Dxflib.Geometry.GeoArc.Radius
  id: Radius
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: Radius
  nameWithType: GeoArc.Radius
  fullName: Dxflib.Geometry.GeoArc.Radius
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Radius
    path: Geometry/GeoArc.cs
    startLine: 131
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Radius of the Arc\n"
  example: []
  syntax:
    content: public double Radius { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Radius As Double
  overload: Dxflib.Geometry.GeoArc.Radius*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.Area
  commentId: P:Dxflib.Geometry.GeoArc.Area
  id: Area
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: GeoArc.Area
  fullName: Dxflib.Geometry.GeoArc.Area
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Area
    path: Geometry/GeoArc.cs
    startLine: 145
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Area of the GeoArc\n"
  example: []
  syntax:
    content: public double Area { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Area As Double
  overload: Dxflib.Geometry.GeoArc.Area*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.Geometry.GeoArc.StartAngle
  commentId: P:Dxflib.Geometry.GeoArc.StartAngle
  id: StartAngle
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: StartAngle
  nameWithType: GeoArc.StartAngle
  fullName: Dxflib.Geometry.GeoArc.StartAngle
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: StartAngle
    path: Geometry/GeoArc.cs
    startLine: 150
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Starting Angle of the arc\n"
  example: []
  syntax:
    content: public double StartAngle { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property StartAngle As Double
  overload: Dxflib.Geometry.GeoArc.StartAngle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.EndAngle
  commentId: P:Dxflib.Geometry.GeoArc.EndAngle
  id: EndAngle
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: EndAngle
  nameWithType: GeoArc.EndAngle
  fullName: Dxflib.Geometry.GeoArc.EndAngle
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: EndAngle
    path: Geometry/GeoArc.cs
    startLine: 164
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Ending Angle of the arc\n"
  example: []
  syntax:
    content: public double EndAngle { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property EndAngle As Double
  overload: Dxflib.Geometry.GeoArc.EndAngle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.Vertex0
  commentId: P:Dxflib.Geometry.GeoArc.Vertex0
  id: Vertex0
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: Vertex0
  nameWithType: GeoArc.Vertex0
  fullName: Dxflib.Geometry.GeoArc.Vertex0
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Vertex0
    path: Geometry/GeoArc.cs
    startLine: 178
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe First Vertex\n"
  example: []
  syntax:
    content: public Vertex Vertex0 { get; set; }
    parameters: []
    return:
      type: Dxflib.Geometry.Vertex
    content.vb: Public Property Vertex0 As Vertex
  overload: Dxflib.Geometry.GeoArc.Vertex0*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.Vertex1
  commentId: P:Dxflib.Geometry.GeoArc.Vertex1
  id: Vertex1
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: Vertex1
  nameWithType: GeoArc.Vertex1
  fullName: Dxflib.Geometry.GeoArc.Vertex1
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Vertex1
    path: Geometry/GeoArc.cs
    startLine: 192
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Second Vertex\n"
  example: []
  syntax:
    content: public Vertex Vertex1 { get; set; }
    parameters: []
    return:
      type: Dxflib.Geometry.Vertex
    content.vb: Public Property Vertex1 As Vertex
  overload: Dxflib.Geometry.GeoArc.Vertex1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.CenterVertex
  commentId: P:Dxflib.Geometry.GeoArc.CenterVertex
  id: CenterVertex
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: CenterVertex
  nameWithType: GeoArc.CenterVertex
  fullName: Dxflib.Geometry.GeoArc.CenterVertex
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: CenterVertex
    path: Geometry/GeoArc.cs
    startLine: 206
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Center of the Arc\n"
  example: []
  syntax:
    content: public Vertex CenterVertex { get; set; }
    parameters: []
    return:
      type: Dxflib.Geometry.Vertex
    content.vb: Public Property CenterVertex As Vertex
  overload: Dxflib.Geometry.GeoArc.CenterVertex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.BulgeValue
  commentId: P:Dxflib.Geometry.GeoArc.BulgeValue
  id: BulgeValue
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: BulgeValue
  nameWithType: GeoArc.BulgeValue
  fullName: Dxflib.Geometry.GeoArc.BulgeValue
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: BulgeValue
    path: Geometry/GeoArc.cs
    startLine: 220
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe bulge value for this object (Is similar to the curvature of an arc)\n"
  example: []
  syntax:
    content: public double BulgeValue { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property BulgeValue As Double
  overload: Dxflib.Geometry.GeoArc.BulgeValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.ToVector
  commentId: M:Dxflib.Geometry.GeoArc.ToVector
  id: ToVector
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: ToVector()
  nameWithType: GeoArc.ToVector()
  fullName: Dxflib.Geometry.GeoArc.ToVector()
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: ToVector
    path: Geometry/GeoArc.cs
    startLine: 234
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\n"
  example: []
  syntax:
    content: public Vector ToVector()
    return:
      type: Dxflib.LinAlg.Vector
      description: ''
    content.vb: Public Function ToVector As Vector
  overload: Dxflib.Geometry.GeoArc.ToVector*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoArc.CalcLength
  commentId: M:Dxflib.Geometry.GeoArc.CalcLength
  id: CalcLength
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: CalcLength()
  nameWithType: GeoArc.CalcLength()
  fullName: Dxflib.Geometry.GeoArc.CalcLength()
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: CalcLength
    path: Geometry/GeoArc.cs
    startLine: 245
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Length of the GeoArc\n"
  example: []
  syntax:
    content: protected override double CalcLength()
    return:
      type: System.Double
      description: A double which represents the length
    content.vb: Protected Overrides Function CalcLength As Double
  overridden: Dxflib.Geometry.GeometricEntityBase.CalcLength
  overload: Dxflib.Geometry.GeoArc.CalcLength*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Dxflib.Geometry.GeoArc.CalcCenterVertex(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,System.Double)
  commentId: M:Dxflib.Geometry.GeoArc.CalcCenterVertex(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,System.Double)
  id: CalcCenterVertex(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex,System.Double)
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: CalcCenterVertex(Vertex, Vertex, Double)
  nameWithType: GeoArc.CalcCenterVertex(Vertex, Vertex, Double)
  fullName: Dxflib.Geometry.GeoArc.CalcCenterVertex(Dxflib.Geometry.Vertex, Dxflib.Geometry.Vertex, System.Double)
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: CalcCenterVertex
    path: Geometry/GeoArc.cs
    startLine: 255
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nCalculates the Center Vertex\n"
  example: []
  syntax:
    content: public static Vertex CalcCenterVertex(Vertex vertex0, Vertex vertex1, double bulge)
    parameters:
    - id: vertex0
      type: Dxflib.Geometry.Vertex
    - id: vertex1
      type: Dxflib.Geometry.Vertex
    - id: bulge
      type: System.Double
    return:
      type: Dxflib.Geometry.Vertex
      description: ''
    content.vb: Public Shared Function CalcCenterVertex(vertex0 As Vertex, vertex1 As Vertex, bulge As Double) As Vertex
  overload: Dxflib.Geometry.GeoArc.CalcCenterVertex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Dxflib.Geometry.GeoArc.CalcPointOnArc(Dxflib.Geometry.Vertex,System.Double,System.Double)
  commentId: M:Dxflib.Geometry.GeoArc.CalcPointOnArc(Dxflib.Geometry.Vertex,System.Double,System.Double)
  id: CalcPointOnArc(Dxflib.Geometry.Vertex,System.Double,System.Double)
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: CalcPointOnArc(Vertex, Double, Double)
  nameWithType: GeoArc.CalcPointOnArc(Vertex, Double, Double)
  fullName: Dxflib.Geometry.GeoArc.CalcPointOnArc(Dxflib.Geometry.Vertex, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: CalcPointOnArc
    path: Geometry/GeoArc.cs
    startLine: 290
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nA function that takes the center vertex of a circle or arc and\ncan get any vertex that lies on the arc that corresponds with the angle given.\n"
  example: []
  syntax:
    content: public static Vertex CalcPointOnArc(Vertex centerVertex, double angle, double radius)
    parameters:
    - id: centerVertex
      type: Dxflib.Geometry.Vertex
      description: The center vertex of the circle/arc
    - id: angle
      type: System.Double
      description: The angle at which the vertex is located
    - id: radius
      type: System.Double
      description: The radius of the circle/arc
    return:
      type: Dxflib.Geometry.Vertex
      description: A vertex that lies on the edge of a circle or arc
    content.vb: Public Shared Function CalcPointOnArc(centerVertex As Vertex, angle As Double, radius As Double) As Vertex
  overload: Dxflib.Geometry.GeoArc.CalcPointOnArc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Dxflib.Geometry.GeoArc.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  commentId: M:Dxflib.Geometry.GeoArc.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  id: UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  parent: Dxflib.Geometry.GeoArc
  langs:
  - csharp
  - vb
  name: UpdateGeometry(Object, GeometryChangedHandlerArgs)
  nameWithType: GeoArc.UpdateGeometry(Object, GeometryChangedHandlerArgs)
  fullName: Dxflib.Geometry.GeoArc.UpdateGeometry(System.Object, Dxflib.Geometry.GeometryChangedHandlerArgs)
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeoArc.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: UpdateGeometry
    path: Geometry/GeoArc.cs
    startLine: 318
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nUpdate the Geometry of the GeoArc\n"
  example: []
  syntax:
    content: protected override sealed void UpdateGeometry(object sender, GeometryChangedHandlerArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Usually this
    - id: args
      type: Dxflib.Geometry.GeometryChangedHandlerArgs
      description: Arguments
    content.vb: Protected NotOverridable Overrides Sub UpdateGeometry(sender As Object, args As GeometryChangedHandlerArgs)
  overridden: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  overload: Dxflib.Geometry.GeoArc.UpdateGeometry*
  modifiers.csharp:
  - protected
  - override
  - sealed
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
references:
- uid: Dxflib.Geometry
  commentId: N:Dxflib.Geometry
  name: Dxflib.Geometry
  nameWithType: Dxflib.Geometry
  fullName: Dxflib.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dxflib.Geometry.GeometricEntityBase
  commentId: T:Dxflib.Geometry.GeometricEntityBase
  parent: Dxflib.Geometry
  name: GeometricEntityBase
  nameWithType: GeometricEntityBase
  fullName: Dxflib.Geometry.GeometricEntityBase
- uid: Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  commentId: E:Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  parent: Dxflib.Geometry.GeometricEntityBase
  name: GeometryChanged
  nameWithType: GeometricEntityBase.GeometryChanged
  fullName: Dxflib.Geometry.GeometricEntityBase.GeometryChanged
- uid: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  commentId: P:Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  parent: Dxflib.Geometry.GeometricEntityBase
  name: GeometryEntityType
  nameWithType: GeometricEntityBase.GeometryEntityType
  fullName: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
- uid: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  commentId: M:Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  parent: Dxflib.Geometry.GeometricEntityBase
  name: OnGeometryChanged(GeometryChangedHandlerArgs)
  nameWithType: GeometricEntityBase.OnGeometryChanged(GeometryChangedHandlerArgs)
  fullName: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  spec.csharp:
  - uid: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
    name: OnGeometryChanged
    nameWithType: GeometricEntityBase.OnGeometryChanged
    fullName: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Dxflib.Geometry.GeometryChangedHandlerArgs
    name: GeometryChangedHandlerArgs
    nameWithType: GeometryChangedHandlerArgs
    fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
    name: OnGeometryChanged
    nameWithType: GeometricEntityBase.OnGeometryChanged
    fullName: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Dxflib.Geometry.GeometryChangedHandlerArgs
    name: GeometryChangedHandlerArgs
    nameWithType: GeometryChangedHandlerArgs
    fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dxflib.Geometry.GeoArc.#ctor*
  commentId: Overload:Dxflib.Geometry.GeoArc.#ctor
  name: GeoArc
  nameWithType: GeoArc.GeoArc
  fullName: Dxflib.Geometry.GeoArc.GeoArc
- uid: Dxflib.Geometry.Vertex
  commentId: T:Dxflib.Geometry.Vertex
  parent: Dxflib.Geometry
  name: Vertex
  nameWithType: Vertex
  fullName: Dxflib.Geometry.Vertex
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Dxflib.Geometry.GeoArc.Length*
  commentId: Overload:Dxflib.Geometry.GeoArc.Length
  name: Length
  nameWithType: GeoArc.Length
  fullName: Dxflib.Geometry.GeoArc.Length
- uid: Dxflib.Geometry.GeoArc.Angle*
  commentId: Overload:Dxflib.Geometry.GeoArc.Angle
  name: Angle
  nameWithType: GeoArc.Angle
  fullName: Dxflib.Geometry.GeoArc.Angle
- uid: Dxflib.Geometry.GeoArc.Radius*
  commentId: Overload:Dxflib.Geometry.GeoArc.Radius
  name: Radius
  nameWithType: GeoArc.Radius
  fullName: Dxflib.Geometry.GeoArc.Radius
- uid: Dxflib.Geometry.GeoArc.Area*
  commentId: Overload:Dxflib.Geometry.GeoArc.Area
  name: Area
  nameWithType: GeoArc.Area
  fullName: Dxflib.Geometry.GeoArc.Area
- uid: Dxflib.Geometry.GeoArc.StartAngle*
  commentId: Overload:Dxflib.Geometry.GeoArc.StartAngle
  name: StartAngle
  nameWithType: GeoArc.StartAngle
  fullName: Dxflib.Geometry.GeoArc.StartAngle
- uid: Dxflib.Geometry.GeoArc.EndAngle*
  commentId: Overload:Dxflib.Geometry.GeoArc.EndAngle
  name: EndAngle
  nameWithType: GeoArc.EndAngle
  fullName: Dxflib.Geometry.GeoArc.EndAngle
- uid: Dxflib.Geometry.GeoArc.Vertex0*
  commentId: Overload:Dxflib.Geometry.GeoArc.Vertex0
  name: Vertex0
  nameWithType: GeoArc.Vertex0
  fullName: Dxflib.Geometry.GeoArc.Vertex0
- uid: Dxflib.Geometry.GeoArc.Vertex1*
  commentId: Overload:Dxflib.Geometry.GeoArc.Vertex1
  name: Vertex1
  nameWithType: GeoArc.Vertex1
  fullName: Dxflib.Geometry.GeoArc.Vertex1
- uid: Dxflib.Geometry.GeoArc.CenterVertex*
  commentId: Overload:Dxflib.Geometry.GeoArc.CenterVertex
  name: CenterVertex
  nameWithType: GeoArc.CenterVertex
  fullName: Dxflib.Geometry.GeoArc.CenterVertex
- uid: Dxflib.Geometry.GeoArc.BulgeValue*
  commentId: Overload:Dxflib.Geometry.GeoArc.BulgeValue
  name: BulgeValue
  nameWithType: GeoArc.BulgeValue
  fullName: Dxflib.Geometry.GeoArc.BulgeValue
- uid: Dxflib.Geometry.GeoArc.ToVector*
  commentId: Overload:Dxflib.Geometry.GeoArc.ToVector
  name: ToVector
  nameWithType: GeoArc.ToVector
  fullName: Dxflib.Geometry.GeoArc.ToVector
- uid: Dxflib.LinAlg.Vector
  commentId: T:Dxflib.LinAlg.Vector
  parent: Dxflib.LinAlg
  name: Vector
  nameWithType: Vector
  fullName: Dxflib.LinAlg.Vector
- uid: Dxflib.LinAlg
  commentId: N:Dxflib.LinAlg
  name: Dxflib.LinAlg
  nameWithType: Dxflib.LinAlg
  fullName: Dxflib.LinAlg
- uid: Dxflib.Geometry.GeometricEntityBase.CalcLength
  commentId: M:Dxflib.Geometry.GeometricEntityBase.CalcLength
  parent: Dxflib.Geometry.GeometricEntityBase
  name: CalcLength()
  nameWithType: GeometricEntityBase.CalcLength()
  fullName: Dxflib.Geometry.GeometricEntityBase.CalcLength()
  spec.csharp:
  - uid: Dxflib.Geometry.GeometricEntityBase.CalcLength
    name: CalcLength
    nameWithType: GeometricEntityBase.CalcLength
    fullName: Dxflib.Geometry.GeometricEntityBase.CalcLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dxflib.Geometry.GeometricEntityBase.CalcLength
    name: CalcLength
    nameWithType: GeometricEntityBase.CalcLength
    fullName: Dxflib.Geometry.GeometricEntityBase.CalcLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dxflib.Geometry.GeoArc.CalcLength*
  commentId: Overload:Dxflib.Geometry.GeoArc.CalcLength
  name: CalcLength
  nameWithType: GeoArc.CalcLength
  fullName: Dxflib.Geometry.GeoArc.CalcLength
- uid: Dxflib.Geometry.GeoArc.CalcCenterVertex*
  commentId: Overload:Dxflib.Geometry.GeoArc.CalcCenterVertex
  name: CalcCenterVertex
  nameWithType: GeoArc.CalcCenterVertex
  fullName: Dxflib.Geometry.GeoArc.CalcCenterVertex
- uid: Dxflib.Geometry.GeoArc.CalcPointOnArc*
  commentId: Overload:Dxflib.Geometry.GeoArc.CalcPointOnArc
  name: CalcPointOnArc
  nameWithType: GeoArc.CalcPointOnArc
  fullName: Dxflib.Geometry.GeoArc.CalcPointOnArc
- uid: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  commentId: M:Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  parent: Dxflib.Geometry.GeometricEntityBase
  isExternal: true
  name: UpdateGeometry(Object, GeometryChangedHandlerArgs)
  nameWithType: GeometricEntityBase.UpdateGeometry(Object, GeometryChangedHandlerArgs)
  fullName: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object, Dxflib.Geometry.GeometryChangedHandlerArgs)
  spec.csharp:
  - uid: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
    name: UpdateGeometry
    nameWithType: GeometricEntityBase.UpdateGeometry
    fullName: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dxflib.Geometry.GeometryChangedHandlerArgs
    name: GeometryChangedHandlerArgs
    nameWithType: GeometryChangedHandlerArgs
    fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
    name: UpdateGeometry
    nameWithType: GeometricEntityBase.UpdateGeometry
    fullName: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dxflib.Geometry.GeometryChangedHandlerArgs
    name: GeometryChangedHandlerArgs
    nameWithType: GeometryChangedHandlerArgs
    fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Dxflib.Geometry.GeoArc.UpdateGeometry*
  commentId: Overload:Dxflib.Geometry.GeoArc.UpdateGeometry
  name: UpdateGeometry
  nameWithType: GeoArc.UpdateGeometry
  fullName: Dxflib.Geometry.GeoArc.UpdateGeometry
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs
  commentId: T:Dxflib.Geometry.GeometryChangedHandlerArgs
  parent: Dxflib.Geometry
  name: GeometryChangedHandlerArgs
  nameWithType: GeometryChangedHandlerArgs
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
