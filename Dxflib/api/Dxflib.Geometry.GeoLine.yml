### YamlMime:ManagedReference
items:
- uid: Dxflib.Geometry.GeoLine
  commentId: T:Dxflib.Geometry.GeoLine
  id: GeoLine
  parent: Dxflib.Geometry
  children:
  - Dxflib.Geometry.GeoLine.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex)
  - Dxflib.Geometry.GeoLine.Area
  - Dxflib.Geometry.GeoLine.CalcLength
  - Dxflib.Geometry.GeoLine.Length
  - Dxflib.Geometry.GeoLine.ToVector
  - Dxflib.Geometry.GeoLine.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  - Dxflib.Geometry.GeoLine.Vertex0
  - Dxflib.Geometry.GeoLine.Vertex1
  langs:
  - csharp
  - vb
  name: GeoLine
  nameWithType: GeoLine
  fullName: Dxflib.Geometry.GeoLine
  type: Class
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: GeoLine
    path: Geometry/GeoLine.cs
    startLine: 20
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nA Geometric line. This line is different than a line that is\ninherienting the entity class. This line should only be used for geometric\npurposes\n"
  example: []
  syntax:
    content: 'public class GeoLine : GeometricEntityBase'
    content.vb: >-
      Public Class GeoLine
          Inherits GeometricEntityBase
  inheritance:
  - System.Object
  - Dxflib.Geometry.GeometricEntityBase
  inheritedMembers:
  - Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  - Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  - Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dxflib.Geometry.GeoLine.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex)
  commentId: M:Dxflib.Geometry.GeoLine.#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex)
  id: '#ctor(Dxflib.Geometry.Vertex,Dxflib.Geometry.Vertex)'
  parent: Dxflib.Geometry.GeoLine
  langs:
  - csharp
  - vb
  name: GeoLine(Vertex, Vertex)
  nameWithType: GeoLine.GeoLine(Vertex, Vertex)
  fullName: Dxflib.Geometry.GeoLine.GeoLine(Dxflib.Geometry.Vertex, Dxflib.Geometry.Vertex)
  type: Constructor
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: Geometry/GeoLine.cs
    startLine: 30
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nMain Constructor of the GeoLine\n"
  example: []
  syntax:
    content: public GeoLine(Vertex v0, Vertex v1)
    parameters:
    - id: v0
      type: Dxflib.Geometry.Vertex
      description: The First Vertex
    - id: v1
      type: Dxflib.Geometry.Vertex
      description: The Second Vertex
    content.vb: Public Sub New(v0 As Vertex, v1 As Vertex)
  overload: Dxflib.Geometry.GeoLine.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoLine.Vertex0
  commentId: P:Dxflib.Geometry.GeoLine.Vertex0
  id: Vertex0
  parent: Dxflib.Geometry.GeoLine
  langs:
  - csharp
  - vb
  name: Vertex0
  nameWithType: GeoLine.Vertex0
  fullName: Dxflib.Geometry.GeoLine.Vertex0
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Vertex0
    path: Geometry/GeoLine.cs
    startLine: 53
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe first Vertex. Note that when setting this property a GeometryChanged\nevent will be broadcasted. Also changing this property will cause an update\nGeometry method to happen.\n"
  example: []
  syntax:
    content: public Vertex Vertex0 { get; set; }
    parameters: []
    return:
      type: Dxflib.Geometry.Vertex
    content.vb: Public Property Vertex0 As Vertex
  overload: Dxflib.Geometry.GeoLine.Vertex0*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoLine.Vertex1
  commentId: P:Dxflib.Geometry.GeoLine.Vertex1
  id: Vertex1
  parent: Dxflib.Geometry.GeoLine
  langs:
  - csharp
  - vb
  name: Vertex1
  nameWithType: GeoLine.Vertex1
  fullName: Dxflib.Geometry.GeoLine.Vertex1
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Vertex1
    path: Geometry/GeoLine.cs
    startLine: 67
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe same as <xref href=\"Dxflib.Geometry.GeoLine.Vertex0\" data-throw-if-not-resolved=\"false\"></xref>. Just the second vertex.\n"
  example: []
  syntax:
    content: public Vertex Vertex1 { get; set; }
    parameters: []
    return:
      type: Dxflib.Geometry.Vertex
    content.vb: Public Property Vertex1 As Vertex
  overload: Dxflib.Geometry.GeoLine.Vertex1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeoLine.CalcLength
  commentId: M:Dxflib.Geometry.GeoLine.CalcLength
  id: CalcLength
  parent: Dxflib.Geometry.GeoLine
  langs:
  - csharp
  - vb
  name: CalcLength()
  nameWithType: GeoLine.CalcLength()
  fullName: Dxflib.Geometry.GeoLine.CalcLength()
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: CalcLength
    path: Geometry/GeoLine.cs
    startLine: 82
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nOverrided CalcLength Function\n"
  example: []
  syntax:
    content: protected override sealed double CalcLength()
    return:
      type: System.Double
      description: ''
    content.vb: Protected NotOverridable Overrides Function CalcLength As Double
  overridden: Dxflib.Geometry.GeometricEntityBase.CalcLength
  overload: Dxflib.Geometry.GeoLine.CalcLength*
  modifiers.csharp:
  - protected
  - override
  - sealed
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
- uid: Dxflib.Geometry.GeoLine.Length
  commentId: P:Dxflib.Geometry.GeoLine.Length
  id: Length
  parent: Dxflib.Geometry.GeoLine
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: GeoLine.Length
  fullName: Dxflib.Geometry.GeoLine.Length
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Length
    path: Geometry/GeoLine.cs
    startLine: 93
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe total length of the polyline.\n"
  example: []
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: Dxflib.Geometry.GeoLine.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.Geometry.GeoLine.Area
  commentId: P:Dxflib.Geometry.GeoLine.Area
  id: Area
  parent: Dxflib.Geometry.GeoLine
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: GeoLine.Area
  fullName: Dxflib.Geometry.GeoLine.Area
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Area
    path: Geometry/GeoLine.cs
    startLine: 98
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Area of the GeoLine\n"
  example: []
  syntax:
    content: public double Area { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Area As Double
  overload: Dxflib.Geometry.GeoLine.Area*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.Geometry.GeoLine.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  commentId: M:Dxflib.Geometry.GeoLine.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  id: UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  parent: Dxflib.Geometry.GeoLine
  langs:
  - csharp
  - vb
  name: UpdateGeometry(Object, GeometryChangedHandlerArgs)
  nameWithType: GeoLine.UpdateGeometry(Object, GeometryChangedHandlerArgs)
  fullName: Dxflib.Geometry.GeoLine.UpdateGeometry(System.Object, Dxflib.Geometry.GeometryChangedHandlerArgs)
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: UpdateGeometry
    path: Geometry/GeoLine.cs
    startLine: 105
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nUpdates the Geometry for this class\n"
  example: []
  syntax:
    content: protected override void UpdateGeometry(object sender, GeometryChangedHandlerArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: The sending object
    - id: args
      type: Dxflib.Geometry.GeometryChangedHandlerArgs
      description: ''
    content.vb: Protected Overrides Sub UpdateGeometry(sender As Object, args As GeometryChangedHandlerArgs)
  overridden: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  overload: Dxflib.Geometry.GeoLine.UpdateGeometry*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Dxflib.Geometry.GeoLine.ToVector
  commentId: M:Dxflib.Geometry.GeoLine.ToVector
  id: ToVector
  parent: Dxflib.Geometry.GeoLine
  langs:
  - csharp
  - vb
  name: ToVector()
  nameWithType: GeoLine.ToVector()
  fullName: Dxflib.Geometry.GeoLine.ToVector()
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeoLine.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: ToVector
    path: Geometry/GeoLine.cs
    startLine: 115
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nConvert this Geoline to a Vector\n"
  example: []
  syntax:
    content: public Vector ToVector()
    return:
      type: Dxflib.LinAlg.Vector
      description: A new Vector
    content.vb: Public Function ToVector As Vector
  overload: Dxflib.Geometry.GeoLine.ToVector*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Dxflib.Geometry
  commentId: N:Dxflib.Geometry
  name: Dxflib.Geometry
  nameWithType: Dxflib.Geometry
  fullName: Dxflib.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dxflib.Geometry.GeometricEntityBase
  commentId: T:Dxflib.Geometry.GeometricEntityBase
  parent: Dxflib.Geometry
  name: GeometricEntityBase
  nameWithType: GeometricEntityBase
  fullName: Dxflib.Geometry.GeometricEntityBase
- uid: Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  commentId: E:Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  parent: Dxflib.Geometry.GeometricEntityBase
  name: GeometryChanged
  nameWithType: GeometricEntityBase.GeometryChanged
  fullName: Dxflib.Geometry.GeometricEntityBase.GeometryChanged
- uid: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  commentId: P:Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  parent: Dxflib.Geometry.GeometricEntityBase
  name: GeometryEntityType
  nameWithType: GeometricEntityBase.GeometryEntityType
  fullName: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
- uid: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  commentId: M:Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  parent: Dxflib.Geometry.GeometricEntityBase
  name: OnGeometryChanged(GeometryChangedHandlerArgs)
  nameWithType: GeometricEntityBase.OnGeometryChanged(GeometryChangedHandlerArgs)
  fullName: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  spec.csharp:
  - uid: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
    name: OnGeometryChanged
    nameWithType: GeometricEntityBase.OnGeometryChanged
    fullName: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Dxflib.Geometry.GeometryChangedHandlerArgs
    name: GeometryChangedHandlerArgs
    nameWithType: GeometryChangedHandlerArgs
    fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
    name: OnGeometryChanged
    nameWithType: GeometricEntityBase.OnGeometryChanged
    fullName: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: Dxflib.Geometry.GeometryChangedHandlerArgs
    name: GeometryChangedHandlerArgs
    nameWithType: GeometryChangedHandlerArgs
    fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dxflib.Geometry.GeoLine.#ctor*
  commentId: Overload:Dxflib.Geometry.GeoLine.#ctor
  name: GeoLine
  nameWithType: GeoLine.GeoLine
  fullName: Dxflib.Geometry.GeoLine.GeoLine
- uid: Dxflib.Geometry.Vertex
  commentId: T:Dxflib.Geometry.Vertex
  parent: Dxflib.Geometry
  name: Vertex
  nameWithType: Vertex
  fullName: Dxflib.Geometry.Vertex
- uid: Dxflib.Geometry.GeoLine.Vertex0*
  commentId: Overload:Dxflib.Geometry.GeoLine.Vertex0
  name: Vertex0
  nameWithType: GeoLine.Vertex0
  fullName: Dxflib.Geometry.GeoLine.Vertex0
- uid: Dxflib.Geometry.GeoLine.Vertex0
  commentId: P:Dxflib.Geometry.GeoLine.Vertex0
  isExternal: true
- uid: Dxflib.Geometry.GeoLine.Vertex1*
  commentId: Overload:Dxflib.Geometry.GeoLine.Vertex1
  name: Vertex1
  nameWithType: GeoLine.Vertex1
  fullName: Dxflib.Geometry.GeoLine.Vertex1
- uid: Dxflib.Geometry.GeometricEntityBase.CalcLength
  commentId: M:Dxflib.Geometry.GeometricEntityBase.CalcLength
  parent: Dxflib.Geometry.GeometricEntityBase
  name: CalcLength()
  nameWithType: GeometricEntityBase.CalcLength()
  fullName: Dxflib.Geometry.GeometricEntityBase.CalcLength()
  spec.csharp:
  - uid: Dxflib.Geometry.GeometricEntityBase.CalcLength
    name: CalcLength
    nameWithType: GeometricEntityBase.CalcLength
    fullName: Dxflib.Geometry.GeometricEntityBase.CalcLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dxflib.Geometry.GeometricEntityBase.CalcLength
    name: CalcLength
    nameWithType: GeometricEntityBase.CalcLength
    fullName: Dxflib.Geometry.GeometricEntityBase.CalcLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dxflib.Geometry.GeoLine.CalcLength*
  commentId: Overload:Dxflib.Geometry.GeoLine.CalcLength
  name: CalcLength
  nameWithType: GeoLine.CalcLength
  fullName: Dxflib.Geometry.GeoLine.CalcLength
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Dxflib.Geometry.GeoLine.Length*
  commentId: Overload:Dxflib.Geometry.GeoLine.Length
  name: Length
  nameWithType: GeoLine.Length
  fullName: Dxflib.Geometry.GeoLine.Length
- uid: Dxflib.Geometry.GeoLine.Area*
  commentId: Overload:Dxflib.Geometry.GeoLine.Area
  name: Area
  nameWithType: GeoLine.Area
  fullName: Dxflib.Geometry.GeoLine.Area
- uid: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  commentId: M:Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  parent: Dxflib.Geometry.GeometricEntityBase
  isExternal: true
  name: UpdateGeometry(Object, GeometryChangedHandlerArgs)
  nameWithType: GeometricEntityBase.UpdateGeometry(Object, GeometryChangedHandlerArgs)
  fullName: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object, Dxflib.Geometry.GeometryChangedHandlerArgs)
  spec.csharp:
  - uid: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
    name: UpdateGeometry
    nameWithType: GeometricEntityBase.UpdateGeometry
    fullName: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dxflib.Geometry.GeometryChangedHandlerArgs
    name: GeometryChangedHandlerArgs
    nameWithType: GeometryChangedHandlerArgs
    fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
    name: UpdateGeometry
    nameWithType: GeometricEntityBase.UpdateGeometry
    fullName: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dxflib.Geometry.GeometryChangedHandlerArgs
    name: GeometryChangedHandlerArgs
    nameWithType: GeometryChangedHandlerArgs
    fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Dxflib.Geometry.GeoLine.UpdateGeometry*
  commentId: Overload:Dxflib.Geometry.GeoLine.UpdateGeometry
  name: UpdateGeometry
  nameWithType: GeoLine.UpdateGeometry
  fullName: Dxflib.Geometry.GeoLine.UpdateGeometry
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs
  commentId: T:Dxflib.Geometry.GeometryChangedHandlerArgs
  parent: Dxflib.Geometry
  name: GeometryChangedHandlerArgs
  nameWithType: GeometryChangedHandlerArgs
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
- uid: Dxflib.Geometry.GeoLine.ToVector*
  commentId: Overload:Dxflib.Geometry.GeoLine.ToVector
  name: ToVector
  nameWithType: GeoLine.ToVector
  fullName: Dxflib.Geometry.GeoLine.ToVector
- uid: Dxflib.LinAlg.Vector
  commentId: T:Dxflib.LinAlg.Vector
  parent: Dxflib.LinAlg
  name: Vector
  nameWithType: Vector
  fullName: Dxflib.LinAlg.Vector
- uid: Dxflib.LinAlg
  commentId: N:Dxflib.LinAlg
  name: Dxflib.LinAlg
  nameWithType: Dxflib.LinAlg
  fullName: Dxflib.LinAlg
