### YamlMime:ManagedReference
items:
- uid: Dxflib.Parser.LineChangeHandlerArgs
  commentId: T:Dxflib.Parser.LineChangeHandlerArgs
  id: LineChangeHandlerArgs
  parent: Dxflib.Parser
  children:
  - Dxflib.Parser.LineChangeHandlerArgs.#ctor(System.String,System.String,System.Int32)
  - Dxflib.Parser.LineChangeHandlerArgs.LineIndex
  - Dxflib.Parser.LineChangeHandlerArgs.NewCurrentLine
  - Dxflib.Parser.LineChangeHandlerArgs.NewNextLine
  langs:
  - csharp
  - vb
  name: LineChangeHandlerArgs
  nameWithType: LineChangeHandlerArgs
  fullName: Dxflib.Parser.LineChangeHandlerArgs
  type: Class
  source:
    remote:
      path: Dxflib/Parser/DxfFileMainParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: LineChangeHandlerArgs
    path: Parser/DxfFileMainParser.cs
    startLine: 100
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  summary: "\nThe arguments that are passed to the delegate for the LineChangedHandler\n"
  example: []
  syntax:
    content: public class LineChangeHandlerArgs
    content.vb: Public Class LineChangeHandlerArgs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dxflib.Parser.LineChangeHandlerArgs.#ctor(System.String,System.String,System.Int32)
  commentId: M:Dxflib.Parser.LineChangeHandlerArgs.#ctor(System.String,System.String,System.Int32)
  id: '#ctor(System.String,System.String,System.Int32)'
  parent: Dxflib.Parser.LineChangeHandlerArgs
  langs:
  - csharp
  - vb
  name: LineChangeHandlerArgs(String, String, Int32)
  nameWithType: LineChangeHandlerArgs.LineChangeHandlerArgs(String, String, Int32)
  fullName: Dxflib.Parser.LineChangeHandlerArgs.LineChangeHandlerArgs(System.String, System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: Dxflib/Parser/DxfFileMainParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: Parser/DxfFileMainParser.cs
    startLine: 108
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  summary: "\nMain Constructor for the LineChangeHandlerArgs class\n"
  example: []
  syntax:
    content: public LineChangeHandlerArgs(string newCurrentLine, string newNextLine, int lineIndex)
    parameters:
    - id: newCurrentLine
      type: System.String
      description: The Current line that the iteration is at
    - id: newNextLine
      type: System.String
      description: The next line in the list that the iteration is at
    - id: lineIndex
      type: System.Int32
      description: The current line index
    content.vb: Public Sub New(newCurrentLine As String, newNextLine As String, lineIndex As Integer)
  overload: Dxflib.Parser.LineChangeHandlerArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Parser.LineChangeHandlerArgs.NewCurrentLine
  commentId: P:Dxflib.Parser.LineChangeHandlerArgs.NewCurrentLine
  id: NewCurrentLine
  parent: Dxflib.Parser.LineChangeHandlerArgs
  langs:
  - csharp
  - vb
  name: NewCurrentLine
  nameWithType: LineChangeHandlerArgs.NewCurrentLine
  fullName: Dxflib.Parser.LineChangeHandlerArgs.NewCurrentLine
  type: Property
  source:
    remote:
      path: Dxflib/Parser/DxfFileMainParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: NewCurrentLine
    path: Parser/DxfFileMainParser.cs
    startLine: 118
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  summary: "\nThe New Current Line\n"
  example: []
  syntax:
    content: public string NewCurrentLine { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NewCurrentLine As String
  overload: Dxflib.Parser.LineChangeHandlerArgs.NewCurrentLine*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.Parser.LineChangeHandlerArgs.NewNextLine
  commentId: P:Dxflib.Parser.LineChangeHandlerArgs.NewNextLine
  id: NewNextLine
  parent: Dxflib.Parser.LineChangeHandlerArgs
  langs:
  - csharp
  - vb
  name: NewNextLine
  nameWithType: LineChangeHandlerArgs.NewNextLine
  fullName: Dxflib.Parser.LineChangeHandlerArgs.NewNextLine
  type: Property
  source:
    remote:
      path: Dxflib/Parser/DxfFileMainParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: NewNextLine
    path: Parser/DxfFileMainParser.cs
    startLine: 123
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  summary: "\nThe New Next Line\n"
  example: []
  syntax:
    content: public string NewNextLine { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NewNextLine As String
  overload: Dxflib.Parser.LineChangeHandlerArgs.NewNextLine*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.Parser.LineChangeHandlerArgs.LineIndex
  commentId: P:Dxflib.Parser.LineChangeHandlerArgs.LineIndex
  id: LineIndex
  parent: Dxflib.Parser.LineChangeHandlerArgs
  langs:
  - csharp
  - vb
  name: LineIndex
  nameWithType: LineChangeHandlerArgs.LineIndex
  fullName: Dxflib.Parser.LineChangeHandlerArgs.LineIndex
  type: Property
  source:
    remote:
      path: Dxflib/Parser/DxfFileMainParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: LineIndex
    path: Parser/DxfFileMainParser.cs
    startLine: 128
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  summary: "\nThe Line Index\n"
  example: []
  syntax:
    content: public int LineIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LineIndex As Integer
  overload: Dxflib.Parser.LineChangeHandlerArgs.LineIndex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dxflib.Parser
  commentId: N:Dxflib.Parser
  name: Dxflib.Parser
  nameWithType: Dxflib.Parser
  fullName: Dxflib.Parser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dxflib.Parser.LineChangeHandlerArgs.#ctor*
  commentId: Overload:Dxflib.Parser.LineChangeHandlerArgs.#ctor
  name: LineChangeHandlerArgs
  nameWithType: LineChangeHandlerArgs.LineChangeHandlerArgs
  fullName: Dxflib.Parser.LineChangeHandlerArgs.LineChangeHandlerArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Dxflib.Parser.LineChangeHandlerArgs.NewCurrentLine*
  commentId: Overload:Dxflib.Parser.LineChangeHandlerArgs.NewCurrentLine
  name: NewCurrentLine
  nameWithType: LineChangeHandlerArgs.NewCurrentLine
  fullName: Dxflib.Parser.LineChangeHandlerArgs.NewCurrentLine
- uid: Dxflib.Parser.LineChangeHandlerArgs.NewNextLine*
  commentId: Overload:Dxflib.Parser.LineChangeHandlerArgs.NewNextLine
  name: NewNextLine
  nameWithType: LineChangeHandlerArgs.NewNextLine
  fullName: Dxflib.Parser.LineChangeHandlerArgs.NewNextLine
- uid: Dxflib.Parser.LineChangeHandlerArgs.LineIndex*
  commentId: Overload:Dxflib.Parser.LineChangeHandlerArgs.LineIndex
  name: LineIndex
  nameWithType: LineChangeHandlerArgs.LineIndex
  fullName: Dxflib.Parser.LineChangeHandlerArgs.LineIndex
