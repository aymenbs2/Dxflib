### YamlMime:ManagedReference
items:
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs
  commentId: T:Dxflib.Geometry.GeometryChangedHandlerArgs
  id: GeometryChangedHandlerArgs
  parent: Dxflib.Geometry
  children:
  - Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor(System.Int32)
  - Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor(System.String)
  - Dxflib.Geometry.GeometryChangedHandlerArgs.Name
  langs:
  - csharp
  - vb
  name: GeometryChangedHandlerArgs
  nameWithType: GeometryChangedHandlerArgs
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
  type: Class
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: GeometryChangedHandlerArgs
    path: Geometry/GeometricEntityBase.cs
    startLine: 73
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe class that defines the event arguments\n"
  example: []
  syntax:
    content: public class GeometryChangedHandlerArgs
    content.vb: Public Class GeometryChangedHandlerArgs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor(System.String)
  commentId: M:Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Dxflib.Geometry.GeometryChangedHandlerArgs
  langs:
  - csharp
  - vb
  name: GeometryChangedHandlerArgs(String)
  nameWithType: GeometryChangedHandlerArgs.GeometryChangedHandlerArgs(String)
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs.GeometryChangedHandlerArgs(System.String)
  type: Constructor
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: Geometry/GeometricEntityBase.cs
    startLine: 79
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe name of the affected argument. Could be X, Y, Z etc..\n"
  example: []
  syntax:
    content: public GeometryChangedHandlerArgs(string name)
    parameters:
    - id: name
      type: System.String
      description: The name that becomes the Name property in the class
    content.vb: Public Sub New(name As String)
  overload: Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor(System.Int32)
  commentId: M:Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Dxflib.Geometry.GeometryChangedHandlerArgs
  langs:
  - csharp
  - vb
  name: GeometryChangedHandlerArgs(Int32)
  nameWithType: GeometryChangedHandlerArgs.GeometryChangedHandlerArgs(Int32)
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs.GeometryChangedHandlerArgs(System.Int32)
  type: Constructor
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: Geometry/GeometricEntityBase.cs
    startLine: 89
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe vertex ID that was changed in the geometry event\n"
  example: []
  syntax:
    content: public GeometryChangedHandlerArgs(int vertexId)
    parameters:
    - id: vertexId
      type: System.Int32
      description: Vertex ID could be 0 or 1 for a geoline
    content.vb: Public Sub New(vertexId As Integer)
  overload: Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs.Name
  commentId: P:Dxflib.Geometry.GeometryChangedHandlerArgs.Name
  id: Name
  parent: Dxflib.Geometry.GeometryChangedHandlerArgs
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GeometryChangedHandlerArgs.Name
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs.Name
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: Name
    path: Geometry/GeometricEntityBase.cs
    startLine: 97
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Name string\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Dxflib.Geometry.GeometryChangedHandlerArgs.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dxflib.Geometry
  commentId: N:Dxflib.Geometry
  name: Dxflib.Geometry
  nameWithType: Dxflib.Geometry
  fullName: Dxflib.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor*
  commentId: Overload:Dxflib.Geometry.GeometryChangedHandlerArgs.#ctor
  name: GeometryChangedHandlerArgs
  nameWithType: GeometryChangedHandlerArgs.GeometryChangedHandlerArgs
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs.GeometryChangedHandlerArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs.Name*
  commentId: Overload:Dxflib.Geometry.GeometryChangedHandlerArgs.Name
  name: Name
  nameWithType: GeometryChangedHandlerArgs.Name
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs.Name
