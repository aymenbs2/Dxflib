### YamlMime:ManagedReference
items:
- uid: Dxflib.Entities.EntityBuffer
  commentId: T:Dxflib.Entities.EntityBuffer
  id: EntityBuffer
  parent: Dxflib.Entities
  children:
  - Dxflib.Entities.EntityBuffer.#ctor
  - Dxflib.Entities.EntityBuffer.EntityType
  - Dxflib.Entities.EntityBuffer.Handle
  - Dxflib.Entities.EntityBuffer.LayerName
  - Dxflib.Entities.EntityBuffer.Parse(Dxflib.Parser.LineChangeHandlerArgs)
  langs:
  - csharp
  - vb
  name: EntityBuffer
  nameWithType: EntityBuffer
  fullName: Dxflib.Entities.EntityBuffer
  type: Class
  source:
    remote:
      path: Dxflib/Entities/Entity.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: EntityBuffer
    path: Entities/Entity.cs
    startLine: 102
  assemblies:
  - Dxflib
  namespace: Dxflib.Entities
  summary: "\nThe Entity buffer class that is used only in extraction\n"
  example: []
  syntax:
    content: public class EntityBuffer
    content.vb: Public Class EntityBuffer
  inheritance:
  - System.Object
  derivedClasses:
  - Dxflib.Entities.HatchBuffer
  - Dxflib.Entities.LineBuffer
  - Dxflib.Entities.LwPolyLineBuffer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dxflib.Entities.EntityBuffer.EntityType
  commentId: F:Dxflib.Entities.EntityBuffer.EntityType
  id: EntityType
  parent: Dxflib.Entities.EntityBuffer
  langs:
  - csharp
  - vb
  name: EntityType
  nameWithType: EntityBuffer.EntityType
  fullName: Dxflib.Entities.EntityBuffer.EntityType
  type: Field
  source:
    remote:
      path: Dxflib/Entities/Entity.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: EntityType
    path: Entities/Entity.cs
    startLine: 107
  assemblies:
  - Dxflib
  namespace: Dxflib.Entities
  summary: "\nThe Entity Type\n"
  example: []
  syntax:
    content: public EntityTypes EntityType
    return:
      type: Dxflib.Entities.EntityTypes
    content.vb: Public EntityType As EntityTypes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Entities.EntityBuffer.#ctor
  commentId: M:Dxflib.Entities.EntityBuffer.#ctor
  id: '#ctor'
  parent: Dxflib.Entities.EntityBuffer
  langs:
  - csharp
  - vb
  name: EntityBuffer()
  nameWithType: EntityBuffer.EntityBuffer()
  fullName: Dxflib.Entities.EntityBuffer.EntityBuffer()
  type: Constructor
  source:
    remote:
      path: Dxflib/Entities/Entity.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: Entities/Entity.cs
    startLine: 112
  assemblies:
  - Dxflib
  namespace: Dxflib.Entities
  summary: "\nMain Constructor that resets all values\n"
  example: []
  syntax:
    content: protected EntityBuffer()
    content.vb: Protected Sub New
  overload: Dxflib.Entities.EntityBuffer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Dxflib.Entities.EntityBuffer.Handle
  commentId: P:Dxflib.Entities.EntityBuffer.Handle
  id: Handle
  parent: Dxflib.Entities.EntityBuffer
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: EntityBuffer.Handle
  fullName: Dxflib.Entities.EntityBuffer.Handle
  type: Property
  source:
    remote:
      path: Dxflib/Entities/Entity.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: Handle
    path: Entities/Entity.cs
    startLine: 122
  assemblies:
  - Dxflib
  namespace: Dxflib.Entities
  summary: "\nThe Entity&apos;s Handle\n"
  example: []
  syntax:
    content: public string Handle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Handle As String
  overload: Dxflib.Entities.EntityBuffer.Handle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Entities.EntityBuffer.LayerName
  commentId: P:Dxflib.Entities.EntityBuffer.LayerName
  id: LayerName
  parent: Dxflib.Entities.EntityBuffer
  langs:
  - csharp
  - vb
  name: LayerName
  nameWithType: EntityBuffer.LayerName
  fullName: Dxflib.Entities.EntityBuffer.LayerName
  type: Property
  source:
    remote:
      path: Dxflib/Entities/Entity.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: LayerName
    path: Entities/Entity.cs
    startLine: 127
  assemblies:
  - Dxflib
  namespace: Dxflib.Entities
  summary: "\nThe Entity&apos;s Layer Name\n"
  example: []
  syntax:
    content: public string LayerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LayerName As String
  overload: Dxflib.Entities.EntityBuffer.LayerName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.Entities.EntityBuffer.Parse(Dxflib.Parser.LineChangeHandlerArgs)
  commentId: M:Dxflib.Entities.EntityBuffer.Parse(Dxflib.Parser.LineChangeHandlerArgs)
  id: Parse(Dxflib.Parser.LineChangeHandlerArgs)
  parent: Dxflib.Entities.EntityBuffer
  langs:
  - csharp
  - vb
  name: Parse(LineChangeHandlerArgs)
  nameWithType: EntityBuffer.Parse(LineChangeHandlerArgs)
  fullName: Dxflib.Entities.EntityBuffer.Parse(Dxflib.Parser.LineChangeHandlerArgs)
  type: Method
  source:
    remote:
      path: Dxflib/Entities/Entity.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: Parse
    path: Entities/Entity.cs
    startLine: 136
  assemblies:
  - Dxflib
  namespace: Dxflib.Entities
  summary: "\nThe Parse Virtual Function that is to be overriden by\neach entity that is to be extracted. This funciton also,\nParses global entity properties such as handle or layername.\n"
  example: []
  syntax:
    content: public virtual bool Parse(LineChangeHandlerArgs args)
    parameters:
    - id: args
      type: Dxflib.Parser.LineChangeHandlerArgs
      description: Line Changed Handler arguments
    return:
      type: System.Boolean
      description: True if the parse was sucessful
    content.vb: Public Overridable Function Parse(args As LineChangeHandlerArgs) As Boolean
  overload: Dxflib.Entities.EntityBuffer.Parse*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Dxflib.Entities
  commentId: N:Dxflib.Entities
  name: Dxflib.Entities
  nameWithType: Dxflib.Entities
  fullName: Dxflib.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dxflib.Entities.EntityTypes
  commentId: T:Dxflib.Entities.EntityTypes
  parent: Dxflib.Entities
  name: EntityTypes
  nameWithType: EntityTypes
  fullName: Dxflib.Entities.EntityTypes
- uid: Dxflib.Entities.EntityBuffer.#ctor*
  commentId: Overload:Dxflib.Entities.EntityBuffer.#ctor
  name: EntityBuffer
  nameWithType: EntityBuffer.EntityBuffer
  fullName: Dxflib.Entities.EntityBuffer.EntityBuffer
- uid: Dxflib.Entities.EntityBuffer.Handle*
  commentId: Overload:Dxflib.Entities.EntityBuffer.Handle
  name: Handle
  nameWithType: EntityBuffer.Handle
  fullName: Dxflib.Entities.EntityBuffer.Handle
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dxflib.Entities.EntityBuffer.LayerName*
  commentId: Overload:Dxflib.Entities.EntityBuffer.LayerName
  name: LayerName
  nameWithType: EntityBuffer.LayerName
  fullName: Dxflib.Entities.EntityBuffer.LayerName
- uid: Dxflib.Entities.EntityBuffer.Parse*
  commentId: Overload:Dxflib.Entities.EntityBuffer.Parse
  name: Parse
  nameWithType: EntityBuffer.Parse
  fullName: Dxflib.Entities.EntityBuffer.Parse
- uid: Dxflib.Parser.LineChangeHandlerArgs
  commentId: T:Dxflib.Parser.LineChangeHandlerArgs
  parent: Dxflib.Parser
  name: LineChangeHandlerArgs
  nameWithType: LineChangeHandlerArgs
  fullName: Dxflib.Parser.LineChangeHandlerArgs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dxflib.Parser
  commentId: N:Dxflib.Parser
  name: Dxflib.Parser
  nameWithType: Dxflib.Parser
  fullName: Dxflib.Parser
