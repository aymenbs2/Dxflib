### YamlMime:ManagedReference
items:
- uid: Dxflib.DxfStream.DxfReader
  commentId: T:Dxflib.DxfStream.DxfReader
  id: DxfReader
  parent: Dxflib.DxfStream
  children:
  - Dxflib.DxfStream.DxfReader.#ctor(System.String)
  - Dxflib.DxfStream.DxfReader.PathToFile
  - Dxflib.DxfStream.DxfReader.ReadFile
  langs:
  - csharp
  - vb
  name: DxfReader
  nameWithType: DxfReader
  fullName: Dxflib.DxfStream.DxfReader
  type: Class
  source:
    remote:
      path: Dxflib/DxfStream/DxfReader.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: DxfReader
    path: DxfStream/DxfReader.cs
    startLine: 21
  assemblies:
  - Dxflib
  namespace: Dxflib.DxfStream
  summary: "\nThe DxfReader class that reads a Dxf file and returns a string list\n"
  example: []
  syntax:
    content: public class DxfReader
    content.vb: Public Class DxfReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dxflib.DxfStream.DxfReader.#ctor(System.String)
  commentId: M:Dxflib.DxfStream.DxfReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Dxflib.DxfStream.DxfReader
  langs:
  - csharp
  - vb
  name: DxfReader(String)
  nameWithType: DxfReader.DxfReader(String)
  fullName: Dxflib.DxfStream.DxfReader.DxfReader(System.String)
  type: Constructor
  source:
    remote:
      path: Dxflib/DxfStream/DxfReader.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: DxfStream/DxfReader.cs
    startLine: 28
  assemblies:
  - Dxflib
  namespace: Dxflib.DxfStream
  summary: "\nCreates an istance of the DxfReader class. Takes a file path as input and reads the file\nThe file contents can be read using the readfile method\n"
  example: []
  syntax:
    content: public DxfReader(string pathToFile)
    parameters:
    - id: pathToFile
      type: System.String
      description: ''
    content.vb: Public Sub New(pathToFile As String)
  overload: Dxflib.DxfStream.DxfReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.DxfStream.DxfReader.PathToFile
  commentId: P:Dxflib.DxfStream.DxfReader.PathToFile
  id: PathToFile
  parent: Dxflib.DxfStream.DxfReader
  langs:
  - csharp
  - vb
  name: PathToFile
  nameWithType: DxfReader.PathToFile
  fullName: Dxflib.DxfStream.DxfReader.PathToFile
  type: Property
  source:
    remote:
      path: Dxflib/DxfStream/DxfReader.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: PathToFile
    path: DxfStream/DxfReader.cs
    startLine: 36
  assemblies:
  - Dxflib
  namespace: Dxflib.DxfStream
  summary: "\nThe Path to the file on the disk\n"
  example: []
  syntax:
    content: public string PathToFile { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PathToFile As String
  overload: Dxflib.DxfStream.DxfReader.PathToFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.DxfStream.DxfReader.ReadFile
  commentId: M:Dxflib.DxfStream.DxfReader.ReadFile
  id: ReadFile
  parent: Dxflib.DxfStream.DxfReader
  langs:
  - csharp
  - vb
  name: ReadFile()
  nameWithType: DxfReader.ReadFile()
  fullName: Dxflib.DxfStream.DxfReader.ReadFile()
  type: Method
  source:
    remote:
      path: Dxflib/DxfStream/DxfReader.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: ReadFile
    path: DxfStream/DxfReader.cs
    startLine: 42
  assemblies:
  - Dxflib
  namespace: Dxflib.DxfStream
  summary: "\nReads all of the contents of the dxf file into a list of strings\n"
  example: []
  syntax:
    content: public string[] ReadFile()
    return:
      type: System.String[]
      description: A List of strings
    content.vb: Public Function ReadFile As String()
  overload: Dxflib.DxfStream.DxfReader.ReadFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Dxflib.DxfStream
  commentId: N:Dxflib.DxfStream
  name: Dxflib.DxfStream
  nameWithType: Dxflib.DxfStream
  fullName: Dxflib.DxfStream
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dxflib.DxfStream.DxfReader.#ctor*
  commentId: Overload:Dxflib.DxfStream.DxfReader.#ctor
  name: DxfReader
  nameWithType: DxfReader.DxfReader
  fullName: Dxflib.DxfStream.DxfReader.DxfReader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dxflib.DxfStream.DxfReader.PathToFile*
  commentId: Overload:Dxflib.DxfStream.DxfReader.PathToFile
  name: PathToFile
  nameWithType: DxfReader.PathToFile
  fullName: Dxflib.DxfStream.DxfReader.PathToFile
- uid: Dxflib.DxfStream.DxfReader.ReadFile*
  commentId: Overload:Dxflib.DxfStream.DxfReader.ReadFile
  name: ReadFile
  nameWithType: DxfReader.ReadFile
  fullName: Dxflib.DxfStream.DxfReader.ReadFile
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
