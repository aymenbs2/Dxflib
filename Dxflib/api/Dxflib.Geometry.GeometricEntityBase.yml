### YamlMime:ManagedReference
items:
- uid: Dxflib.Geometry.GeometricEntityBase
  commentId: T:Dxflib.Geometry.GeometricEntityBase
  id: GeometricEntityBase
  parent: Dxflib.Geometry
  children:
  - Dxflib.Geometry.GeometricEntityBase.CalcLength
  - Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  - Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  - Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  - Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  langs:
  - csharp
  - vb
  name: GeometricEntityBase
  nameWithType: GeometricEntityBase
  fullName: Dxflib.Geometry.GeometricEntityBase
  type: Class
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: GeometricEntityBase
    path: Geometry/GeometricEntityBase.cs
    startLine: 20
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nAn abstract class that serves two purposes:\n1. To unify all geometric properties\n2. To provide the GeometryChanged Event that\nOccurs when there is a geometry change to alert parent classes\nthat they might need to update their geometry\n"
  example: []
  syntax:
    content: public abstract class GeometricEntityBase
    content.vb: Public MustInherit Class GeometricEntityBase
  inheritance:
  - System.Object
  derivedClasses:
  - Dxflib.Geometry.GeoArc
  - Dxflib.Geometry.GeoLine
  - Dxflib.Geometry.GeoPolyline
  - Dxflib.Geometry.Vertex
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  commentId: E:Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  id: GeometryChanged
  parent: Dxflib.Geometry.GeometricEntityBase
  langs:
  - csharp
  - vb
  name: GeometryChanged
  nameWithType: GeometricEntityBase.GeometryChanged
  fullName: Dxflib.Geometry.GeometricEntityBase.GeometryChanged
  type: Event
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: GeometryChanged
    path: Geometry/GeometricEntityBase.cs
    startLine: 26
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe Geometry changed event that alerts subscribers that they might need\nto update their geometry.\n"
  example: []
  syntax:
    content: public event GeometryChangedHandler GeometryChanged
    return:
      type: Dxflib.Geometry.GeometryChangedHandler
    content.vb: Public Event GeometryChanged As GeometryChangedHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  commentId: P:Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  id: GeometryEntityType
  parent: Dxflib.Geometry.GeometricEntityBase
  langs:
  - csharp
  - vb
  name: GeometryEntityType
  nameWithType: GeometricEntityBase.GeometryEntityType
  fullName: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  type: Property
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: GeometryEntityType
    path: Geometry/GeometricEntityBase.cs
    startLine: 31
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nThe entity type\n"
  example: []
  syntax:
    content: public GeometryEntityTypes GeometryEntityType { get; protected set; }
    parameters: []
    return:
      type: Dxflib.Geometry.GeometryEntityTypes
    content.vb: Public Property GeometryEntityType As GeometryEntityTypes
  overload: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  commentId: M:Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  id: OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  parent: Dxflib.Geometry.GeometricEntityBase
  langs:
  - csharp
  - vb
  name: OnGeometryChanged(GeometryChangedHandlerArgs)
  nameWithType: GeometricEntityBase.OnGeometryChanged(GeometryChangedHandlerArgs)
  fullName: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged(Dxflib.Geometry.GeometryChangedHandlerArgs)
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: OnGeometryChanged
    path: Geometry/GeometricEntityBase.cs
    startLine: 37
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nBase class Invocation of the Geometry changed event\n"
  example: []
  syntax:
    content: protected virtual void OnGeometryChanged(GeometryChangedHandlerArgs args)
    parameters:
    - id: args
      type: Dxflib.Geometry.GeometryChangedHandlerArgs
      description: Arguments for the event
    content.vb: Protected Overridable Sub OnGeometryChanged(args As GeometryChangedHandlerArgs)
  overload: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  commentId: M:Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  id: UpdateGeometry(System.Object,Dxflib.Geometry.GeometryChangedHandlerArgs)
  parent: Dxflib.Geometry.GeometricEntityBase
  langs:
  - csharp
  - vb
  name: UpdateGeometry(Object, GeometryChangedHandlerArgs)
  nameWithType: GeometricEntityBase.UpdateGeometry(Object, GeometryChangedHandlerArgs)
  fullName: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry(System.Object, Dxflib.Geometry.GeometryChangedHandlerArgs)
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: UpdateGeometry
    path: Geometry/GeometricEntityBase.cs
    startLine: 48
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nProtected Virtual void function that should define how the geometry entity\ndeals with geometry update\n"
  example: []
  syntax:
    content: protected virtual void UpdateGeometry(object sender, GeometryChangedHandlerArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: ''
    - id: args
      type: Dxflib.Geometry.GeometryChangedHandlerArgs
      description: ''
    content.vb: Protected Overridable Sub UpdateGeometry(sender As Object, args As GeometryChangedHandlerArgs)
  overload: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Dxflib.Geometry.GeometricEntityBase.CalcLength
  commentId: M:Dxflib.Geometry.GeometricEntityBase.CalcLength
  id: CalcLength
  parent: Dxflib.Geometry.GeometricEntityBase
  langs:
  - csharp
  - vb
  name: CalcLength()
  nameWithType: GeometricEntityBase.CalcLength()
  fullName: Dxflib.Geometry.GeometricEntityBase.CalcLength()
  type: Method
  source:
    remote:
      path: Dxflib/Geometry/GeometricEntityBase.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: CalcLength
    path: Geometry/GeometricEntityBase.cs
    startLine: 57
  assemblies:
  - Dxflib
  namespace: Dxflib.Geometry
  summary: "\nCalculating the length of the geometric entity\n"
  example: []
  syntax:
    content: protected virtual double CalcLength()
    return:
      type: System.Double
      description: In the base entity it returns 0
    content.vb: Protected Overridable Function CalcLength As Double
  overload: Dxflib.Geometry.GeometricEntityBase.CalcLength*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Dxflib.Geometry
  commentId: N:Dxflib.Geometry
  name: Dxflib.Geometry
  nameWithType: Dxflib.Geometry
  fullName: Dxflib.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dxflib.Geometry.GeometryChangedHandler
  commentId: T:Dxflib.Geometry.GeometryChangedHandler
  parent: Dxflib.Geometry
  name: GeometryChangedHandler
  nameWithType: GeometryChangedHandler
  fullName: Dxflib.Geometry.GeometryChangedHandler
- uid: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType*
  commentId: Overload:Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
  name: GeometryEntityType
  nameWithType: GeometricEntityBase.GeometryEntityType
  fullName: Dxflib.Geometry.GeometricEntityBase.GeometryEntityType
- uid: Dxflib.Geometry.GeometryEntityTypes
  commentId: T:Dxflib.Geometry.GeometryEntityTypes
  parent: Dxflib.Geometry
  name: GeometryEntityTypes
  nameWithType: GeometryEntityTypes
  fullName: Dxflib.Geometry.GeometryEntityTypes
- uid: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged*
  commentId: Overload:Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged
  name: OnGeometryChanged
  nameWithType: GeometricEntityBase.OnGeometryChanged
  fullName: Dxflib.Geometry.GeometricEntityBase.OnGeometryChanged
- uid: Dxflib.Geometry.GeometryChangedHandlerArgs
  commentId: T:Dxflib.Geometry.GeometryChangedHandlerArgs
  parent: Dxflib.Geometry
  name: GeometryChangedHandlerArgs
  nameWithType: GeometryChangedHandlerArgs
  fullName: Dxflib.Geometry.GeometryChangedHandlerArgs
- uid: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry*
  commentId: Overload:Dxflib.Geometry.GeometricEntityBase.UpdateGeometry
  name: UpdateGeometry
  nameWithType: GeometricEntityBase.UpdateGeometry
  fullName: Dxflib.Geometry.GeometricEntityBase.UpdateGeometry
- uid: Dxflib.Geometry.GeometricEntityBase.CalcLength*
  commentId: Overload:Dxflib.Geometry.GeometricEntityBase.CalcLength
  name: CalcLength
  nameWithType: GeometricEntityBase.CalcLength
  fullName: Dxflib.Geometry.GeometricEntityBase.CalcLength
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
