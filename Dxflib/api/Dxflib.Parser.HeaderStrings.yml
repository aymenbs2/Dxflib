### YamlMime:ManagedReference
items:
- uid: Dxflib.Parser.HeaderStrings
  commentId: T:Dxflib.Parser.HeaderStrings
  id: HeaderStrings
  parent: Dxflib.Parser
  children:
  - Dxflib.Parser.HeaderStrings.AutoCadVersion
  - Dxflib.Parser.HeaderStrings.CurrentLayer
  - Dxflib.Parser.HeaderStrings.LastSavedBy
  langs:
  - csharp
  - vb
  name: HeaderStrings
  nameWithType: HeaderStrings
  fullName: Dxflib.Parser.HeaderStrings
  type: Class
  source:
    remote:
      path: Dxflib/Parser/HeaderParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: HeaderStrings
    path: Parser/HeaderParser.cs
    startLine: 75
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  summary: "\nMain header strings that are used in the main parse function for\nheaders. This class is just a selection of strings\n"
  example: []
  syntax:
    content: public static class HeaderStrings
    content.vb: Public Module HeaderStrings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Dxflib.Parser.HeaderStrings.AutoCadVersion
  commentId: F:Dxflib.Parser.HeaderStrings.AutoCadVersion
  id: AutoCadVersion
  parent: Dxflib.Parser.HeaderStrings
  langs:
  - csharp
  - vb
  name: AutoCadVersion
  nameWithType: HeaderStrings.AutoCadVersion
  fullName: Dxflib.Parser.HeaderStrings.AutoCadVersion
  type: Field
  source:
    remote:
      path: Dxflib/Parser/HeaderParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: AutoCadVersion
    path: Parser/HeaderParser.cs
    startLine: 77
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  syntax:
    content: public const string AutoCadVersion = "$ACADVER"
    return:
      type: System.String
    content.vb: Public Const AutoCadVersion As String = "$ACADVER"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Dxflib.Parser.HeaderStrings.CurrentLayer
  commentId: F:Dxflib.Parser.HeaderStrings.CurrentLayer
  id: CurrentLayer
  parent: Dxflib.Parser.HeaderStrings
  langs:
  - csharp
  - vb
  name: CurrentLayer
  nameWithType: HeaderStrings.CurrentLayer
  fullName: Dxflib.Parser.HeaderStrings.CurrentLayer
  type: Field
  source:
    remote:
      path: Dxflib/Parser/HeaderParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: CurrentLayer
    path: Parser/HeaderParser.cs
    startLine: 78
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  syntax:
    content: public const string CurrentLayer = "$CLAYER"
    return:
      type: System.String
    content.vb: Public Const CurrentLayer As String = "$CLAYER"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Dxflib.Parser.HeaderStrings.LastSavedBy
  commentId: F:Dxflib.Parser.HeaderStrings.LastSavedBy
  id: LastSavedBy
  parent: Dxflib.Parser.HeaderStrings
  langs:
  - csharp
  - vb
  name: LastSavedBy
  nameWithType: HeaderStrings.LastSavedBy
  fullName: Dxflib.Parser.HeaderStrings.LastSavedBy
  type: Field
  source:
    remote:
      path: Dxflib/Parser/HeaderParser.cs
      branch: master
      repo: https://github.com/rena0157/Dxflib.git
    id: LastSavedBy
    path: Parser/HeaderParser.cs
    startLine: 79
  assemblies:
  - Dxflib
  namespace: Dxflib.Parser
  syntax:
    content: public const string LastSavedBy = "$LASTSAVEDBY"
    return:
      type: System.String
    content.vb: Public Const LastSavedBy As String = "$LASTSAVEDBY"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Dxflib.Parser
  commentId: N:Dxflib.Parser
  name: Dxflib.Parser
  nameWithType: Dxflib.Parser
  fullName: Dxflib.Parser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
