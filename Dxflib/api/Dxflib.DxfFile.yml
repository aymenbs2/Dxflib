### YamlMime:ManagedReference
items:
- uid: Dxflib.DxfFile
  commentId: T:Dxflib.DxfFile
  id: DxfFile
  parent: Dxflib
  children:
  - Dxflib.DxfFile.#ctor(System.String)
  - Dxflib.DxfFile.AutoCADVersion
  - Dxflib.DxfFile.ContentStrings
  - Dxflib.DxfFile.CurrentLayer
  - Dxflib.DxfFile.Entities
  - Dxflib.DxfFile.FileName
  - Dxflib.DxfFile.GetEntitiesByType``1(Dxflib.Entities.EntityTypes)
  - Dxflib.DxfFile.LastSavedBy
  - Dxflib.DxfFile.Layers
  - Dxflib.DxfFile.PathToFile
  langs:
  - csharp
  - vb
  name: DxfFile
  nameWithType: DxfFile
  fullName: Dxflib.DxfFile
  type: Class
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: DxfFile
    path: DxfFile.cs
    startLine: 26
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nThe DxfFile Class\n"
  example: []
  syntax:
    content: public class DxfFile
    content.vb: Public Class DxfFile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dxflib.DxfFile.#ctor(System.String)
  commentId: M:Dxflib.DxfFile.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: DxfFile(String)
  nameWithType: DxfFile.DxfFile(String)
  fullName: Dxflib.DxfFile.DxfFile(System.String)
  type: Constructor
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: .ctor
    path: DxfFile.cs
    startLine: 38
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nConstructor that requires a path to a file.\nThis constructor will read the file and set up all of the required\ntools for the DxfFile class\n"
  example: []
  syntax:
    content: public DxfFile(string pathToFile)
    parameters:
    - id: pathToFile
      type: System.String
      description: An absolute or relative path to a dxf file
    content.vb: Public Sub New(pathToFile As String)
  overload: Dxflib.DxfFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dxflib.DxfFile.ContentStrings
  commentId: P:Dxflib.DxfFile.ContentStrings
  id: ContentStrings
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: ContentStrings
  nameWithType: DxfFile.ContentStrings
  fullName: Dxflib.DxfFile.ContentStrings
  type: Property
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: ContentStrings
    path: DxfFile.cs
    startLine: 60
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nThe Content strings\n"
  example: []
  syntax:
    content: public string[] ContentStrings { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property ContentStrings As String()
  overload: Dxflib.DxfFile.ContentStrings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.DxfFile.Layers
  commentId: P:Dxflib.DxfFile.Layers
  id: Layers
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: Layers
  nameWithType: DxfFile.Layers
  fullName: Dxflib.DxfFile.Layers
  type: Property
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: Layers
    path: DxfFile.cs
    startLine: 65
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nThe Layer Dictionary\n"
  example: []
  syntax:
    content: public LayerDictionary Layers { get; }
    parameters: []
    return:
      type: Dxflib.AcadEntities.LayerDictionary
    content.vb: Public ReadOnly Property Layers As LayerDictionary
  overload: Dxflib.DxfFile.Layers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.DxfFile.Entities
  commentId: P:Dxflib.DxfFile.Entities
  id: Entities
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: Entities
  nameWithType: DxfFile.Entities
  fullName: Dxflib.DxfFile.Entities
  type: Property
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: Entities
    path: DxfFile.cs
    startLine: 70
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nAll of the entities that are extracted\n"
  example: []
  syntax:
    content: public List<Entity> Entities { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Dxflib.Entities.Entity}
    content.vb: Public ReadOnly Property Entities As List(Of Entity)
  overload: Dxflib.DxfFile.Entities*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.DxfFile.PathToFile
  commentId: P:Dxflib.DxfFile.PathToFile
  id: PathToFile
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: PathToFile
  nameWithType: DxfFile.PathToFile
  fullName: Dxflib.DxfFile.PathToFile
  type: Property
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: PathToFile
    path: DxfFile.cs
    startLine: 77
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nThe absolute path to the file\n"
  example: []
  syntax:
    content: public string PathToFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PathToFile As String
  overload: Dxflib.DxfFile.PathToFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.DxfFile.FileName
  commentId: P:Dxflib.DxfFile.FileName
  id: FileName
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: DxfFile.FileName
  fullName: Dxflib.DxfFile.FileName
  type: Property
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: FileName
    path: DxfFile.cs
    startLine: 82
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nThe filename and the extension\n"
  example: []
  syntax:
    content: public string FileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FileName As String
  overload: Dxflib.DxfFile.FileName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dxflib.DxfFile.GetEntitiesByType``1(Dxflib.Entities.EntityTypes)
  commentId: M:Dxflib.DxfFile.GetEntitiesByType``1(Dxflib.Entities.EntityTypes)
  id: GetEntitiesByType``1(Dxflib.Entities.EntityTypes)
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: GetEntitiesByType<T>(EntityTypes)
  nameWithType: DxfFile.GetEntitiesByType<T>(EntityTypes)
  fullName: Dxflib.DxfFile.GetEntitiesByType<T>(Dxflib.Entities.EntityTypes)
  type: Method
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: GetEntitiesByType
    path: DxfFile.cs
    startLine: 89
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nGet Entities by Entity Type\n"
  example: []
  syntax:
    content: public List<T> GetEntitiesByType<T>(EntityTypes entityType)
    parameters:
    - id: entityType
      type: Dxflib.Entities.EntityTypes
      description: ''
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{{T}}
      description: ''
    content.vb: Public Function GetEntitiesByType(Of T)(entityType As EntityTypes) As List(Of T)
  overload: Dxflib.DxfFile.GetEntitiesByType*
  nameWithType.vb: DxfFile.GetEntitiesByType(Of T)(EntityTypes)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dxflib.DxfFile.GetEntitiesByType(Of T)(Dxflib.Entities.EntityTypes)
  name.vb: GetEntitiesByType(Of T)(EntityTypes)
- uid: Dxflib.DxfFile.AutoCADVersion
  commentId: P:Dxflib.DxfFile.AutoCADVersion
  id: AutoCADVersion
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: AutoCADVersion
  nameWithType: DxfFile.AutoCADVersion
  fullName: Dxflib.DxfFile.AutoCADVersion
  type: Property
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: AutoCADVersion
    path: DxfFile.cs
    startLine: 107
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nThe Files AutoCAD Version\n"
  example: []
  syntax:
    content: public AutoCadVersions AutoCADVersion { get; set; }
    parameters: []
    return:
      type: Dxflib.Parser.AutoCadVersions
    content.vb: Public Property AutoCADVersion As AutoCadVersions
  overload: Dxflib.DxfFile.AutoCADVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.DxfFile.CurrentLayer
  commentId: P:Dxflib.DxfFile.CurrentLayer
  id: CurrentLayer
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: CurrentLayer
  nameWithType: DxfFile.CurrentLayer
  fullName: Dxflib.DxfFile.CurrentLayer
  type: Property
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: CurrentLayer
    path: DxfFile.cs
    startLine: 112
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nThe Current Layer\n"
  example: []
  syntax:
    content: public Layer CurrentLayer { get; set; }
    parameters: []
    return:
      type: Dxflib.AcadEntities.Layer
    content.vb: Public Property CurrentLayer As Layer
  overload: Dxflib.DxfFile.CurrentLayer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Dxflib.DxfFile.LastSavedBy
  commentId: P:Dxflib.DxfFile.LastSavedBy
  id: LastSavedBy
  parent: Dxflib.DxfFile
  langs:
  - csharp
  - vb
  name: LastSavedBy
  nameWithType: DxfFile.LastSavedBy
  fullName: Dxflib.DxfFile.LastSavedBy
  type: Property
  source:
    remote:
      path: Dxflib/DxfFile.cs
      branch: DocsFXTest
      repo: https://github.com/rena0157/Dxflib.git
    id: LastSavedBy
    path: DxfFile.cs
    startLine: 117
  assemblies:
  - Dxflib
  namespace: Dxflib
  summary: "\nWho the file was last saved by\n"
  example: []
  syntax:
    content: public string LastSavedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastSavedBy As String
  overload: Dxflib.DxfFile.LastSavedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Dxflib
  commentId: N:Dxflib
  name: Dxflib
  nameWithType: Dxflib
  fullName: Dxflib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dxflib.DxfFile.#ctor*
  commentId: Overload:Dxflib.DxfFile.#ctor
  name: DxfFile
  nameWithType: DxfFile.DxfFile
  fullName: Dxflib.DxfFile.DxfFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dxflib.DxfFile.ContentStrings*
  commentId: Overload:Dxflib.DxfFile.ContentStrings
  name: ContentStrings
  nameWithType: DxfFile.ContentStrings
  fullName: Dxflib.DxfFile.ContentStrings
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Dxflib.DxfFile.Layers*
  commentId: Overload:Dxflib.DxfFile.Layers
  name: Layers
  nameWithType: DxfFile.Layers
  fullName: Dxflib.DxfFile.Layers
- uid: Dxflib.AcadEntities.LayerDictionary
  commentId: T:Dxflib.AcadEntities.LayerDictionary
  parent: Dxflib.AcadEntities
  name: LayerDictionary
  nameWithType: LayerDictionary
  fullName: Dxflib.AcadEntities.LayerDictionary
- uid: Dxflib.AcadEntities
  commentId: N:Dxflib.AcadEntities
  name: Dxflib.AcadEntities
  nameWithType: Dxflib.AcadEntities
  fullName: Dxflib.AcadEntities
- uid: Dxflib.DxfFile.Entities*
  commentId: Overload:Dxflib.DxfFile.Entities
  name: Entities
  nameWithType: DxfFile.Entities
  fullName: Dxflib.DxfFile.Entities
- uid: System.Collections.Generic.List{Dxflib.Entities.Entity}
  commentId: T:System.Collections.Generic.List{Dxflib.Entities.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Entity>
  nameWithType: List<Entity>
  fullName: System.Collections.Generic.List<Dxflib.Entities.Entity>
  nameWithType.vb: List(Of Entity)
  fullName.vb: System.Collections.Generic.List(Of Dxflib.Entities.Entity)
  name.vb: List(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dxflib.Entities.Entity
    name: Entity
    nameWithType: Entity
    fullName: Dxflib.Entities.Entity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dxflib.Entities.Entity
    name: Entity
    nameWithType: Entity
    fullName: Dxflib.Entities.Entity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dxflib.DxfFile.PathToFile*
  commentId: Overload:Dxflib.DxfFile.PathToFile
  name: PathToFile
  nameWithType: DxfFile.PathToFile
  fullName: Dxflib.DxfFile.PathToFile
- uid: Dxflib.DxfFile.FileName*
  commentId: Overload:Dxflib.DxfFile.FileName
  name: FileName
  nameWithType: DxfFile.FileName
  fullName: Dxflib.DxfFile.FileName
- uid: Dxflib.DxfFile.GetEntitiesByType*
  commentId: Overload:Dxflib.DxfFile.GetEntitiesByType
  name: GetEntitiesByType
  nameWithType: DxfFile.GetEntitiesByType
  fullName: Dxflib.DxfFile.GetEntitiesByType
- uid: Dxflib.Entities.EntityTypes
  commentId: T:Dxflib.Entities.EntityTypes
  parent: Dxflib.Entities
  name: EntityTypes
  nameWithType: EntityTypes
  fullName: Dxflib.Entities.EntityTypes
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dxflib.Entities
  commentId: N:Dxflib.Entities
  name: Dxflib.Entities
  nameWithType: Dxflib.Entities
  fullName: Dxflib.Entities
- uid: Dxflib.DxfFile.AutoCADVersion*
  commentId: Overload:Dxflib.DxfFile.AutoCADVersion
  name: AutoCADVersion
  nameWithType: DxfFile.AutoCADVersion
  fullName: Dxflib.DxfFile.AutoCADVersion
- uid: Dxflib.Parser.AutoCadVersions
  commentId: T:Dxflib.Parser.AutoCadVersions
  parent: Dxflib.Parser
  name: AutoCadVersions
  nameWithType: AutoCadVersions
  fullName: Dxflib.Parser.AutoCadVersions
- uid: Dxflib.Parser
  commentId: N:Dxflib.Parser
  name: Dxflib.Parser
  nameWithType: Dxflib.Parser
  fullName: Dxflib.Parser
- uid: Dxflib.DxfFile.CurrentLayer*
  commentId: Overload:Dxflib.DxfFile.CurrentLayer
  name: CurrentLayer
  nameWithType: DxfFile.CurrentLayer
  fullName: Dxflib.DxfFile.CurrentLayer
- uid: Dxflib.AcadEntities.Layer
  commentId: T:Dxflib.AcadEntities.Layer
  parent: Dxflib.AcadEntities
  name: Layer
  nameWithType: Layer
  fullName: Dxflib.AcadEntities.Layer
- uid: Dxflib.DxfFile.LastSavedBy*
  commentId: Overload:Dxflib.DxfFile.LastSavedBy
  name: LastSavedBy
  nameWithType: DxfFile.LastSavedBy
  fullName: Dxflib.DxfFile.LastSavedBy
